{"ast":null,"code":"var _jsxFileName = \"/Users/camdenking/Desktop/access_reviews/client/src/Place.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Rating from '@mui/material/Rating';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Image from 'material-ui-image';\nimport { Link } from '@mui/material';\nimport SearchBar from './SearchBar';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Place() {\n  _s();\n\n  const q = queryString.parse(window.location.search);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    // document.title = `Results for ${q.q}`;\n    axios.get(\"http://localhost:3000\" + `/yelp/business?id=${q.id}`).then(res => {\n      console.log(res.data);\n      setResults(res.data.businesses);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [q.q]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Place, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n\n_c = Place;\n\nvar _c;\n\n$RefreshReg$(_c, \"Place\");","map":{"version":3,"sources":["/Users/camdenking/Desktop/access_reviews/client/src/Place.js"],"names":["React","Paper","Rating","Grid","Typography","Image","Link","SearchBar","queryString","Place","q","parse","window","location","search","results","setResults","useState","useEffect","axios","get","id","then","res","console","log","data","businesses","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAMC,CAAC,GAAGF,WAAW,CAACG,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAV;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,0BAA2B,qBAAoBV,CAAC,CAACW,EAAG,EAA9D,EACCC,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAV,MAAAA,UAAU,CAACO,GAAG,CAACG,IAAJ,CAASC,UAAV,CAAV;AACH,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAPD;AAQH,GAVQ,EAUN,CAACnB,CAAC,CAACA,CAAH,CAVM,CAAT;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GA7DuBD,K;;KAAAA,K","sourcesContent":["import React from 'react'\nimport Paper from '@mui/material/Paper';\nimport Rating from '@mui/material/Rating';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Image from 'material-ui-image';\nimport { Link } from '@mui/material';\nimport SearchBar from './SearchBar'\nimport queryString from 'query-string';\n\nexport default function Place() {\n    const q = queryString.parse(window.location.search);\n    const [results, setResults] = useState([]);\n\n    useEffect(() => {\n        // document.title = `Results for ${q.q}`;\n        axios.get(\"http://localhost:3000\" + `/yelp/business?id=${q.id}`)\n        .then(res => {\n            console.log(res.data);\n            setResults(res.data.businesses);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }, [q.q]);\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SearchBar />\n            </Grid>\n            {/* <Grid item xs={2}>\n                <Image src={result.image_url} />\n            </Grid>\n            <Grid item xs={12} sm={10} container>\n                <Grid item xs={12} sm={6}>\n                    <Typography sx={{ fontSize: 20 }} display=\"inline\">\n                        {result.name}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.rating} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > On Yelp </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.ot ? result.access?.ot / result.access?.ob : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Overall accessability </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.wt ? result.access?.wt / result.access?.wb : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Wheelchair access</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.pt ? result.access?.pt / result.access?.pb : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Parking </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.st ? result.access?.st / result.access?.sb : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Seating </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.bt ? result.access?.bt / result.access?.bb : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Bathrooms </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Rating value={result.access?.st ? result.access?.st / result.access?.sb : null} readOnly display=\"inline\" /> \n                    <Typography display=\"inline\" > Staff </Typography>\n                </Grid>\n            </Grid> */}\n        </Grid>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}